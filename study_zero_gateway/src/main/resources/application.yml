server:
  port: 9999

spring:
  application:
    name: study-zero-gateway
  cloud:
    gateway:
      # 全局的跨域处理
      globalcors:
        # 解决options请求被拦截问题，Cors解决方案，客户端询问服务端，这次询问需要放行
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            #allowedOrigins: "*"
            # 允许哪些网站的跨域请求
            #  - "http://localhost:8089"
            allowedMethods:
              # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
              # 允许在请求中携带的头信息
            allowedHeaders: "*"
            # 是否允许携带cookie
            allowCredentials: true
            # 这次跨域检测的有效期，在有效期内容不需要每次Ajax请求都询问服务端
            maxAge: 360000
      routes:
#        id唯一
        - id: study-zero-user
#          uri  匹配后要访问的地址
          uri: http://127.0.0.1:10001
#          需要匹配的规则
          predicates:
            - Path=/user/**
#          https://blog.csdn.net/qq_61603262/article/details/127384412   翻译文
#          过滤器数组，在请求传递过程中，去除请求路径中的1级路径
          filters:
            - StripPrefix=1
        - id: study-zero-system
          uri: http://127.0.0.1:10002
          predicates:
            - Path=/system/**
          filters:
            - StripPrefix=1
        - id: study-zero-pay
          uri: http://127.0.0.1:1003
          predicates:
            - Path=/pay/**
          filters:
            - StripPrefix=1